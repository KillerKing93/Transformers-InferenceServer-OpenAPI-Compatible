name: Build and Push Docker Image

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      matrix:
        include:
          - backend: cpu
            bake_model: 1
          - backend: nvidia
            bake_model: 0
          - backend: amd
            bake_model: 0
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Derive lowercase image name
      shell: bash
      run: echo "IMAGE_NAME_LC=${GITHUB_REPOSITORY,,}" >> $GITHUB_ENV

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LC }}

    - name: Build and push Docker image (${{ matrix.backend }})
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LC }}:main-${{ matrix.backend }}-${{ matrix.bake_model == 1 && 'with-model' || 'runtime' }}
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LC }}:latest-${{ matrix.backend }}-${{ matrix.bake_model == 1 && 'with-model' || 'runtime' }}
          ${{ matrix.backend == 'cpu' && format('{0}/{1}:latest', env.REGISTRY, env.IMAGE_NAME_LC) || '' }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64
        build-args: |
          BACKEND=${{ matrix.backend }}
          BAKE_MODEL=${{ matrix.bake_model }}
        secrets: |
          HF_TOKEN=${{ secrets.HF_TOKEN }}